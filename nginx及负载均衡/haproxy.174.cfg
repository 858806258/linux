#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000


frontend http_web

bind 0.0.0.0:18080
#acl is_web1 hdr_beg(host) -i auth.sicdt.com  ###判断域名是不是www.80uncle.com,是则分配给与web1集群
acl is_web1 hdr_dom(host) -i qpe.auth.sicdt.cn  ###判断域名是不是www.80uncle.com,是则分配给与web1集群
acl is_web2 hdr_beg(host) -i qpe.data.sicdt.cn  ###判断域名是不是download.80uncle.com,是则分配给与web2集群
acl is_web3 hdr_beg(host) -i qpe.op.sicdt.cn  ###判断域名是不是download.80uncle.com,是则分配给与web2集群
acl is_web4 hdr_beg(host) -i qpe.sale.sicdt.cn  ###判断域名是不是download.80uncle.com,是则分配给与web2集群
use_backend game1 if is_web1   ###当使用web1策略域名的时候使用game1集群
use_backend game2 if is_web2   ###当使用web2策略域名的时候使用game2集群
use_backend game3 if is_web3   ###当使用web2策略域名的时候使用game2集群
use_backend game4 if is_web4   ###当使用web2策略域名的时候使用game2集群

backend game1   
balance		roundrobin    
#option httpchk HEAD /index.html
#cookie SERVERID insert nocache indirect 
#appsession JSESSIONID len 52 timeout 10800000
server a1  192.168.3.175:81 cookie a1 check inter 1500 rise 3 fall 3 weight 3
server a2  192.168.3.165:81 cookie a2 check inter 1500 rise 3 fall 3 weight 3
 
backend game2 
balance		roundrobin    
#option httpchk HEAD /index.html
#cookie SERVERID insert nocache indirect 
#appsession JSESSIONID len 52 timeout 10800000
server b1  192.168.3.175:82 cookie b1 check inter 1500 rise 3 fall 3 weight 3
server b2  192.168.3.165:82 cookie b2 check inter 1500 rise 3 fall 3 weight 3

backend game3
balance		roundrobin    
server c1  192.168.3.175:83 cookie c1 check inter 1500 rise 3 fall 3 weight 3
server c2  192.168.3.165:83 cookie c2 check inter 1500 rise 3 fall 3 weight 3


backend game4
balance		roundrobin    
server d1  192.168.3.175:84 cookie c1 check inter 1500 rise 3 fall 3 weight 3
server d2  192.168.3.165:84 cookie c2 check inter 1500 rise 3 fall 3 weight 3


listen webserver_cluster
bind 0.0.0.0:9981
balance roundrobin
server webserver1  192.168.3.175:9981 check inter 5000 rise 2 fall 2
server webserver2  192.168.3.165:9981 check inter 5000 rise 2 fall 2


frontend https
    bind 0.0.0.0:8443
    option tcplog
    mode tcp
    default_backend cluster_https

backend cluster_https
    mode tcp
    balance roundrobin
    #stick-table type ip size 200k expire 30m
    #stick on src
    option ssl-hello-chk
    server https01 192.168.3.165:8443
    server https02 192.168.3.175:8443

